{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Python HTML Output\n",
        "subtitle: Rich IPython output, HTML content, and Jupyter Widgets\n",
        "format: live-html\n",
        "toc: true\n",
        "resources:\n",
        "  - \"images\"\n",
        "pyodide:\n",
        "  packages:\n",
        "    - matplotlib\n",
        "    - ipywidgets\n",
        "    - altair\n",
        "    - numpy\n",
        "    - pandas\n",
        "    - vega_datasets\n",
        "---\n",
        "\n",
        "The `quarto-live` extension has support for displaying several types of IPython [rich output](https://ipython.readthedocs.io/en/stable/interactive/plotting.html#rich-outputs) and [Jupyter Widgets](https://ipywidgets.readthedocs.io/en/latest/) with interactive code blocks.\n",
        "\n",
        "## Example: IPython rich output\n",
        "\n",
        "```{pyodide}\n",
        "from IPython.display import HTML\n",
        "from IPython.display import Image\n",
        "display(HTML(\"<h3>Hello from <code>IPython</code>!</h3>\"))\n",
        "display(HTML(\"<p>This is HTML output, and below is an image.</p>\"))\n",
        "Image(filename='images/python-logo.png') \n",
        "```\n",
        "\n",
        "## Example: Altair interactive visualisation\n",
        "\n",
        "```{pyodide}\n",
        "import altair as alt\n",
        "from vega_datasets import data\n",
        "\n",
        "cars = data.cars()\n",
        "alt.Chart(cars).mark_point().encode(\n",
        "    x='Horsepower',\n",
        "    y='Miles_per_Gallon',\n",
        "    color='Origin',\n",
        "    tooltip=['Name', 'Origin', 'Horsepower', 'Miles_per_Gallon']\n",
        ").interactive().properties(\n",
        "  width='container',\n",
        "  height=300\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "## Example: Jupyter Widgets\n",
        "\n",
        "```{pyodide}\n",
        "import ipywidgets as widgets\n",
        "\n",
        "out = widgets.Output(\n",
        "  layout={'border': '1px solid black', 'padding': '1em'}\n",
        ")\n",
        "out.append_display_data(\n",
        "  widgets.IntSlider(\n",
        "    value=7, min=0, max=10, step=1,\n",
        "    description='Slider:',\n",
        "    disabled=False,\n",
        "  )\n",
        ")\n",
        "out.append_display_data(\n",
        "  widgets.Text(\n",
        "      value=\"Hello\",\n",
        "      description='Text:',\n",
        "      disabled=False\n",
        "  )\n",
        ")\n",
        "out.append_display_data(\n",
        "  widgets.Dropdown(\n",
        "    options=[('One', 1), ('Two', 2), ('Three', 3)],\n",
        "    value=2,\n",
        "    description='Number:',\n",
        "  )\n",
        ")\n",
        "out.append_display_data(\n",
        "  widgets.ColorPicker(\n",
        "      concise=False,\n",
        "      description='Color picker',\n",
        "      value='blue',\n",
        "      disabled=False\n",
        "  )\n",
        ")\n",
        "out\n",
        "```\n",
        "\n",
        "::: {.callout-note}\n",
        "At the moment Jupyter widgets cannot be used as reactive inputs for `quarto-live`'s [OJS integration](../interactive/reactivity.qmd). This is planned to be added in a future release of `quarto-live`.\n",
        ":::\n"
      ],
      "id": "2eba8088"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\cgibeil@emory.edu\\AppData\\Local\\Programs\\Python\\Python311\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}